version: '3'

services:
  mysql_db:
    image: mysql:latest
    container_name: wordpress_db_ctr
    restart: unless-stopped
    env_file: .env    
    environment:
      MYSQL_DATABASE: wordpress_db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}     
      MYSQL_PASSWORD: $MYSQL_PASSWORD}     
    volumes:
      - mysql_db:/var/lib/mysql
    networks:
      - app-network
      
  wordpress:
    image: wordpress:latest
    container_name: wordpress_ctr
    restart: always    
    env_file: .env    
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: wordpress
    networks:
      - app-network  
    volumes:
      - ./wordpress:/var/www/html
      - ./.docker/wordpress/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    networks:
      - app-network
      
  nginx:
    build: 
      context: ./.docker/nginx
      dockerfile: Dockerfile
    restart: always      
    image: nginx:latest
    container_name: nginx_ctr    
    ports:
      - "80:80"
      - "${WP_PORT:-443}:443"
      - "${MYADMIN_PORT:-8080}:8080"
    volumes:
      - ./wordpress:/var/www/html/wordpress
      - phpmyadmin:/var/www/html/phpmyadmin
      - ./nginx-conf:/etc/nginx/conf.d
    networks:
      app-network:
        aliases:
          - localhost
    restart: always
    
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_ctr        
    restart: unless-stopped
    env_file: .env
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - phpmyadmin:/var/www/html
    networks:
      - app-network
       
networks:
  app-network:
    driver: bridge
    
volumes:
  mysql_db:
    driver: local
  phpmyadmin:
    driver: local
  
  